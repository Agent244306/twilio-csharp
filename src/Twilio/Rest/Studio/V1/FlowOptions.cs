/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Studio.V1 
{

    /// <summary>
    /// Retrieve a list of all Flows.
    /// </summary>
    public class ReadFlowOptions : ReadOptions<FlowResource> 
    {
        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public override List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }

            return p;
        }
    }

    /// <summary>
    /// Retrieve a specific Flow.
    /// </summary>
    public class FetchFlowOptions : IOptions<FlowResource> 
    {
        /// <summary>
        /// A string that uniquely identifies this Flow.
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new FetchFlowOptions
        /// </summary>
        /// <param name="pathSid"> A string that uniquely identifies this Flow. </param>
        public FetchFlowOptions(string pathSid)
        {
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

    /// <summary>
    /// Delete a specific Flow.
    /// </summary>
    public class DeleteFlowOptions : IOptions<FlowResource> 
    {
        /// <summary>
        /// A string that uniquely identifies this Flow.
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new DeleteFlowOptions
        /// </summary>
        /// <param name="pathSid"> A string that uniquely identifies this Flow. </param>
        public DeleteFlowOptions(string pathSid)
        {
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

}