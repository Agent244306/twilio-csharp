/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Trunking.V1.Trunk 
{

    /// <summary>
    /// Fetch the details of an associated SIP Domain
    /// </summary>
    public class FetchTerminatingSipDomainOptions : IOptions<TerminatingSipDomainResource> 
    {
        /// <summary>
        /// The unique sid of the trunk.
        /// </summary>
        public string PathTrunkSid { get; }
        /// <summary>
        /// The unique sid of the domain.
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new FetchTerminatingSipDomainOptions
        /// </summary>
        /// <param name="pathTrunkSid"> The unique sid of the trunk. </param>
        /// <param name="pathSid"> The unique sid of the domain. </param>
        public FetchTerminatingSipDomainOptions(string pathTrunkSid, string pathSid)
        {
            PathTrunkSid = pathTrunkSid;
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

    /// <summary>
    /// Disassociate a SIP Domain from the Trunk
    /// </summary>
    public class DeleteTerminatingSipDomainOptions : IOptions<TerminatingSipDomainResource> 
    {
        /// <summary>
        /// The unique sid of the trunk.
        /// </summary>
        public string PathTrunkSid { get; }
        /// <summary>
        /// The unique sid of the domain.
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new DeleteTerminatingSipDomainOptions
        /// </summary>
        /// <param name="pathTrunkSid"> The unique sid of the trunk. </param>
        /// <param name="pathSid"> The unique sid of the domain. </param>
        public DeleteTerminatingSipDomainOptions(string pathTrunkSid, string pathSid)
        {
            PathTrunkSid = pathTrunkSid;
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

    /// <summary>
    /// Associate a SIP Domain with the Trunk
    /// </summary>
    public class CreateTerminatingSipDomainOptions : IOptions<TerminatingSipDomainResource> 
    {
        /// <summary>
        /// The unique sid of the trunk.
        /// </summary>
        public string PathTrunkSid { get; }
        /// <summary>
        /// The SID of the SIP Domain to associate.
        /// </summary>
        public string SipDomainSid { get; }

        /// <summary>
        /// Construct a new CreateTerminatingSipDomainOptions
        /// </summary>
        /// <param name="pathTrunkSid"> The unique sid of the trunk. </param>
        /// <param name="sipDomainSid"> The SID of the SIP Domain to associate. </param>
        public CreateTerminatingSipDomainOptions(string pathTrunkSid, string sipDomainSid)
        {
            PathTrunkSid = pathTrunkSid;
            SipDomainSid = sipDomainSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (SipDomainSid != null)
            {
                p.Add(new KeyValuePair<string, string>("SipDomainSid", SipDomainSid.ToString()));
            }

            return p;
        }
    }

    /// <summary>
    /// List SIP Domains associated with the Trunk
    /// </summary>
    public class ReadTerminatingSipDomainOptions : ReadOptions<TerminatingSipDomainResource> 
    {
        /// <summary>
        /// The unique sid of the trunk.
        /// </summary>
        public string PathTrunkSid { get; }

        /// <summary>
        /// Construct a new ReadTerminatingSipDomainOptions
        /// </summary>
        /// <param name="pathTrunkSid"> The unique sid of the trunk. </param>
        public ReadTerminatingSipDomainOptions(string pathTrunkSid)
        {
            PathTrunkSid = pathTrunkSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public override List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }

            return p;
        }
    }

}