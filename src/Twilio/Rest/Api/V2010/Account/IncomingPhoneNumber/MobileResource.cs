/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// MobileResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;
using Twilio.Types;

namespace Twilio.Rest.Api.V2010.Account.IncomingPhoneNumber 
{

    public class MobileResource : Resource 
    {
        public sealed class AddressRequirementEnum : StringEnum 
        {
            private AddressRequirementEnum(string value) : base(value) {}
            public AddressRequirementEnum() {}
            public static implicit operator AddressRequirementEnum(string value)
            {
                return new AddressRequirementEnum(value);
            }

            public static readonly AddressRequirementEnum None = new AddressRequirementEnum("none");
            public static readonly AddressRequirementEnum Any = new AddressRequirementEnum("any");
            public static readonly AddressRequirementEnum Local = new AddressRequirementEnum("local");
            public static readonly AddressRequirementEnum Foreign = new AddressRequirementEnum("foreign");
        }

        private static Request BuildReadRequest(ReadMobileOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Get,
                Rest.Domain.Api,
                "/2010-04-01/Accounts/" + (options.PathAccountSid ?? client.AccountSid) + "/IncomingPhoneNumbers/Mobile.json",
                client.Region,
                queryParams: options.GetParams()
            );
        }

        /// <summary>
        /// read
        /// </summary>
        /// <param name="options"> Read Mobile parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of Mobile </returns> 
        public static ResourceSet<MobileResource> Read(ReadMobileOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildReadRequest(options, client));

            var page = Page<MobileResource>.FromJson("incoming_phone_numbers", response.Content);
            return new ResourceSet<MobileResource>(page, options, client);
        }

        #if !NET35
        /// <summary>
        /// read
        /// </summary>
        /// <param name="options"> Read Mobile parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of Mobile </returns> 
        public static async System.Threading.Tasks.Task<ResourceSet<MobileResource>> ReadAsync(ReadMobileOptions options, 
                                                                                               ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildReadRequest(options, client));

            var page = Page<MobileResource>.FromJson("incoming_phone_numbers", response.Content);
            return new ResourceSet<MobileResource>(page, options, client);
        }
        #endif

        /// <summary>
        /// read
        /// </summary>
        /// <param name="pathAccountSid"> The account_sid </param>
        /// <param name="beta"> Include phone numbers new to the Twilio platform. </param>
        /// <param name="friendlyName"> Only show the incoming phone number resources with friendly names that exactly match
        ///                    this name. </param>
        /// <param name="phoneNumber"> Only show the incoming phone number resources that match this pattern. </param>
        /// <param name="origin"> Include phone numbers based on the origin, by default, phone numbers of all origin are
        ///              included. </param>
        /// <param name="pageSize"> Page size </param>
        /// <param name="limit"> Record limit </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of Mobile </returns> 
        public static ResourceSet<MobileResource> Read(string pathAccountSid = null, 
                                                       bool? beta = null, 
                                                       string friendlyName = null, 
                                                       Types.PhoneNumber phoneNumber = null, 
                                                       string origin = null, 
                                                       int? pageSize = null, 
                                                       long? limit = null, 
                                                       ITwilioRestClient client = null)
        {
            var options = new ReadMobileOptions(){PathAccountSid = pathAccountSid, Beta = beta, FriendlyName = friendlyName, PhoneNumber = phoneNumber, Origin = origin, PageSize = pageSize, Limit = limit};
            return Read(options, client);
        }

        #if !NET35
        /// <summary>
        /// read
        /// </summary>
        /// <param name="pathAccountSid"> The account_sid </param>
        /// <param name="beta"> Include phone numbers new to the Twilio platform. </param>
        /// <param name="friendlyName"> Only show the incoming phone number resources with friendly names that exactly match
        ///                    this name. </param>
        /// <param name="phoneNumber"> Only show the incoming phone number resources that match this pattern. </param>
        /// <param name="origin"> Include phone numbers based on the origin, by default, phone numbers of all origin are
        ///              included. </param>
        /// <param name="pageSize"> Page size </param>
        /// <param name="limit"> Record limit </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of Mobile </returns> 
        public static async System.Threading.Tasks.Task<ResourceSet<MobileResource>> ReadAsync(string pathAccountSid = null, 
                                                                                               bool? beta = null, 
                                                                                               string friendlyName = null, 
                                                                                               Types.PhoneNumber phoneNumber = null, 
                                                                                               string origin = null, 
                                                                                               int? pageSize = null, 
                                                                                               long? limit = null, 
                                                                                               ITwilioRestClient client = null)
        {
            var options = new ReadMobileOptions(){PathAccountSid = pathAccountSid, Beta = beta, FriendlyName = friendlyName, PhoneNumber = phoneNumber, Origin = origin, PageSize = pageSize, Limit = limit};
            return await ReadAsync(options, client);
        }
        #endif

        /// <summary>
        /// Fetch the target page of records
        /// </summary>
        /// <param name="targetUrl"> API-generated URL for the requested results page </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> The target page of records </returns> 
        public static Page<MobileResource> GetPage(string targetUrl, ITwilioRestClient client)
        {
            client = client ?? TwilioClient.GetRestClient();

            var request = new Request(
                HttpMethod.Get,
                targetUrl
            );

            var response = client.Request(request);
            return Page<MobileResource>.FromJson("incoming_phone_numbers", response.Content);
        }

        /// <summary>
        /// Fetch the next page of records
        /// </summary>
        /// <param name="page"> current page of records </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> The next page of records </returns> 
        public static Page<MobileResource> NextPage(Page<MobileResource> page, ITwilioRestClient client)
        {
            var request = new Request(
                HttpMethod.Get,
                page.GetNextPageUrl(
                    Rest.Domain.Api,
                    client.Region
                )
            );

            var response = client.Request(request);
            return Page<MobileResource>.FromJson("incoming_phone_numbers", response.Content);
        }

        /// <summary>
        /// Fetch the previous page of records
        /// </summary>
        /// <param name="page"> current page of records </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> The previous page of records </returns> 
        public static Page<MobileResource> PreviousPage(Page<MobileResource> page, ITwilioRestClient client)
        {
            var request = new Request(
                HttpMethod.Get,
                page.GetPreviousPageUrl(
                    Rest.Domain.Api,
                    client.Region
                )
            );

            var response = client.Request(request);
            return Page<MobileResource>.FromJson("incoming_phone_numbers", response.Content);
        }

        private static Request BuildCreateRequest(CreateMobileOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Post,
                Rest.Domain.Api,
                "/2010-04-01/Accounts/" + (options.PathAccountSid ?? client.AccountSid) + "/IncomingPhoneNumbers/Mobile.json",
                client.Region,
                postParams: options.GetParams()
            );
        }

        /// <summary>
        /// create
        /// </summary>
        /// <param name="options"> Create Mobile parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of Mobile </returns> 
        public static MobileResource Create(CreateMobileOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// create
        /// </summary>
        /// <param name="options"> Create Mobile parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of Mobile </returns> 
        public static async System.Threading.Tasks.Task<MobileResource> CreateAsync(CreateMobileOptions options, 
                                                                                    ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// create
        /// </summary>
        /// <param name="phoneNumber"> The phone number you want to purchase. </param>
        /// <param name="pathAccountSid"> The account_sid </param>
        /// <param name="apiVersion"> The Twilio REST API version to use for incoming calls made to this number. </param>
        /// <param name="friendlyName"> A human readable description of the new incoming phone number. </param>
        /// <param name="smsApplicationSid"> The 34 character sid of the application Twilio should use to handle SMSs sent to
        ///                         the new number. </param>
        /// <param name="smsFallbackMethod"> The HTTP method that should be used to request the SmsFallbackUrl. </param>
        /// <param name="smsFallbackUrl"> A URL that Twilio will request if an error occurs requesting or executing the TwiML
        ///                      defined by SmsUrl. </param>
        /// <param name="smsMethod"> The HTTP method that should be used to request the SmsUrl. </param>
        /// <param name="smsUrl"> The URL that Twilio should request when somebody sends an SMS to the phone number. </param>
        /// <param name="statusCallback"> The URL that Twilio will request to pass status parameters to your application.
        ///                      </param>
        /// <param name="statusCallbackMethod"> The HTTP method Twilio will use to make requests to the StatusCallback URL.
        ///                            </param>
        /// <param name="voiceApplicationSid"> The 34 character sid of the application Twilio should use to handle phone calls
        ///                           to the new number. </param>
        /// <param name="voiceCallerIdLookup"> Do a lookup of a caller's name from the CNAM database and post it to your app.
        ///                           </param>
        /// <param name="voiceFallbackMethod"> The HTTP method that should be used to request the VoiceFallbackUrl. </param>
        /// <param name="voiceFallbackUrl"> A URL that Twilio will request if an error occurs requesting or executing the TwiML
        ///                        at Url. </param>
        /// <param name="voiceMethod"> The HTTP method that should be used to request the VoiceUrl. </param>
        /// <param name="voiceUrl"> The URL that Twilio should request when somebody dials the new phone number. </param>
        /// <param name="identitySid"> The identity_sid </param>
        /// <param name="addressSid"> The 34 character sid of the address Twilio should associate with the number. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of Mobile </returns> 
        public static MobileResource Create(Types.PhoneNumber phoneNumber, 
                                            string pathAccountSid = null, 
                                            string apiVersion = null, 
                                            string friendlyName = null, 
                                            string smsApplicationSid = null, 
                                            Twilio.Http.HttpMethod smsFallbackMethod = null, 
                                            Uri smsFallbackUrl = null, 
                                            Twilio.Http.HttpMethod smsMethod = null, 
                                            Uri smsUrl = null, 
                                            Uri statusCallback = null, 
                                            Twilio.Http.HttpMethod statusCallbackMethod = null, 
                                            string voiceApplicationSid = null, 
                                            bool? voiceCallerIdLookup = null, 
                                            Twilio.Http.HttpMethod voiceFallbackMethod = null, 
                                            Uri voiceFallbackUrl = null, 
                                            Twilio.Http.HttpMethod voiceMethod = null, 
                                            Uri voiceUrl = null, 
                                            string identitySid = null, 
                                            string addressSid = null, 
                                            ITwilioRestClient client = null)
        {
            var options = new CreateMobileOptions(phoneNumber){PathAccountSid = pathAccountSid, ApiVersion = apiVersion, FriendlyName = friendlyName, SmsApplicationSid = smsApplicationSid, SmsFallbackMethod = smsFallbackMethod, SmsFallbackUrl = smsFallbackUrl, SmsMethod = smsMethod, SmsUrl = smsUrl, StatusCallback = statusCallback, StatusCallbackMethod = statusCallbackMethod, VoiceApplicationSid = voiceApplicationSid, VoiceCallerIdLookup = voiceCallerIdLookup, VoiceFallbackMethod = voiceFallbackMethod, VoiceFallbackUrl = voiceFallbackUrl, VoiceMethod = voiceMethod, VoiceUrl = voiceUrl, IdentitySid = identitySid, AddressSid = addressSid};
            return Create(options, client);
        }

        #if !NET35
        /// <summary>
        /// create
        /// </summary>
        /// <param name="phoneNumber"> The phone number you want to purchase. </param>
        /// <param name="pathAccountSid"> The account_sid </param>
        /// <param name="apiVersion"> The Twilio REST API version to use for incoming calls made to this number. </param>
        /// <param name="friendlyName"> A human readable description of the new incoming phone number. </param>
        /// <param name="smsApplicationSid"> The 34 character sid of the application Twilio should use to handle SMSs sent to
        ///                         the new number. </param>
        /// <param name="smsFallbackMethod"> The HTTP method that should be used to request the SmsFallbackUrl. </param>
        /// <param name="smsFallbackUrl"> A URL that Twilio will request if an error occurs requesting or executing the TwiML
        ///                      defined by SmsUrl. </param>
        /// <param name="smsMethod"> The HTTP method that should be used to request the SmsUrl. </param>
        /// <param name="smsUrl"> The URL that Twilio should request when somebody sends an SMS to the phone number. </param>
        /// <param name="statusCallback"> The URL that Twilio will request to pass status parameters to your application.
        ///                      </param>
        /// <param name="statusCallbackMethod"> The HTTP method Twilio will use to make requests to the StatusCallback URL.
        ///                            </param>
        /// <param name="voiceApplicationSid"> The 34 character sid of the application Twilio should use to handle phone calls
        ///                           to the new number. </param>
        /// <param name="voiceCallerIdLookup"> Do a lookup of a caller's name from the CNAM database and post it to your app.
        ///                           </param>
        /// <param name="voiceFallbackMethod"> The HTTP method that should be used to request the VoiceFallbackUrl. </param>
        /// <param name="voiceFallbackUrl"> A URL that Twilio will request if an error occurs requesting or executing the TwiML
        ///                        at Url. </param>
        /// <param name="voiceMethod"> The HTTP method that should be used to request the VoiceUrl. </param>
        /// <param name="voiceUrl"> The URL that Twilio should request when somebody dials the new phone number. </param>
        /// <param name="identitySid"> The identity_sid </param>
        /// <param name="addressSid"> The 34 character sid of the address Twilio should associate with the number. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of Mobile </returns> 
        public static async System.Threading.Tasks.Task<MobileResource> CreateAsync(Types.PhoneNumber phoneNumber, 
                                                                                    string pathAccountSid = null, 
                                                                                    string apiVersion = null, 
                                                                                    string friendlyName = null, 
                                                                                    string smsApplicationSid = null, 
                                                                                    Twilio.Http.HttpMethod smsFallbackMethod = null, 
                                                                                    Uri smsFallbackUrl = null, 
                                                                                    Twilio.Http.HttpMethod smsMethod = null, 
                                                                                    Uri smsUrl = null, 
                                                                                    Uri statusCallback = null, 
                                                                                    Twilio.Http.HttpMethod statusCallbackMethod = null, 
                                                                                    string voiceApplicationSid = null, 
                                                                                    bool? voiceCallerIdLookup = null, 
                                                                                    Twilio.Http.HttpMethod voiceFallbackMethod = null, 
                                                                                    Uri voiceFallbackUrl = null, 
                                                                                    Twilio.Http.HttpMethod voiceMethod = null, 
                                                                                    Uri voiceUrl = null, 
                                                                                    string identitySid = null, 
                                                                                    string addressSid = null, 
                                                                                    ITwilioRestClient client = null)
        {
            var options = new CreateMobileOptions(phoneNumber){PathAccountSid = pathAccountSid, ApiVersion = apiVersion, FriendlyName = friendlyName, SmsApplicationSid = smsApplicationSid, SmsFallbackMethod = smsFallbackMethod, SmsFallbackUrl = smsFallbackUrl, SmsMethod = smsMethod, SmsUrl = smsUrl, StatusCallback = statusCallback, StatusCallbackMethod = statusCallbackMethod, VoiceApplicationSid = voiceApplicationSid, VoiceCallerIdLookup = voiceCallerIdLookup, VoiceFallbackMethod = voiceFallbackMethod, VoiceFallbackUrl = voiceFallbackUrl, VoiceMethod = voiceMethod, VoiceUrl = voiceUrl, IdentitySid = identitySid, AddressSid = addressSid};
            return await CreateAsync(options, client);
        }
        #endif

        /// <summary>
        /// Converts a JSON string into a MobileResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> MobileResource object represented by the provided JSON </returns> 
        public static MobileResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<MobileResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// The unique id of the Account responsible for this phone number.
        /// </summary>
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }
        /// <summary>
        /// The 34 character sid of the address associated with this number.
        /// </summary>
        [JsonProperty("address_sid")]
        public string AddressSid { get; private set; }
        /// <summary>
        /// This indicates whether the phone number requires you or your customer to have an Address registered with Twilio.
        /// </summary>
        [JsonProperty("address_requirements")]
        [JsonConverter(typeof(StringEnumConverter))]
        public MobileResource.AddressRequirementEnum AddressRequirements { get; private set; }
        /// <summary>
        /// Calls to this phone number will start a new TwiML session with this API version.
        /// </summary>
        [JsonProperty("api_version")]
        public string ApiVersion { get; private set; }
        /// <summary>
        /// Phone numbers new to the Twilio platform are marked as beta.
        /// </summary>
        [JsonProperty("beta")]
        public bool? Beta { get; private set; }
        /// <summary>
        /// This is a set of boolean properties that indicate whether a phone number can receive calls or messages.
        /// </summary>
        [JsonProperty("capabilities")]
        public PhoneNumberCapabilities Capabilities { get; private set; }
        /// <summary>
        /// The date that this resource was created, given as GMT RFC 2822 format.
        /// </summary>
        [JsonProperty("date_created")]
        public DateTime? DateCreated { get; private set; }
        /// <summary>
        /// The date that this resource was last updated, given as GMT RFC 2822 format.
        /// </summary>
        [JsonProperty("date_updated")]
        public DateTime? DateUpdated { get; private set; }
        /// <summary>
        /// A human readable descriptive text for this resource, up to 64 characters long.
        /// </summary>
        [JsonProperty("friendly_name")]
        public string FriendlyName { get; private set; }
        /// <summary>
        /// The identity_sid
        /// </summary>
        [JsonProperty("identity_sid")]
        public string IdentitySid { get; private set; }
        /// <summary>
        /// The incoming phone number.
        /// </summary>
        [JsonProperty("phone_number")]
        [JsonConverter(typeof(PhoneNumberConverter))]
        public Types.PhoneNumber PhoneNumber { get; private set; }
        /// <summary>
        /// Twilio owned phone numbers are marked as twilio while hosted phone numbers are marked as hosted.
        /// </summary>
        [JsonProperty("origin")]
        public string Origin { get; private set; }
        /// <summary>
        /// A 34 character string that uniquely identifies this resource.
        /// </summary>
        [JsonProperty("sid")]
        public string Sid { get; private set; }
        /// <summary>
        /// The 34 character sid of the application Twilio should use to handle SMSs sent to this number.
        /// </summary>
        [JsonProperty("sms_application_sid")]
        public string SmsApplicationSid { get; private set; }
        /// <summary>
        /// The HTTP method Twilio will use when requesting the above URL.
        /// </summary>
        [JsonProperty("sms_fallback_method")]
        [JsonConverter(typeof(HttpMethodConverter))]
        public Twilio.Http.HttpMethod SmsFallbackMethod { get; private set; }
        /// <summary>
        /// The URL that Twilio will request if an error occurs retrieving or executing the TwiML from SmsUrl.
        /// </summary>
        [JsonProperty("sms_fallback_url")]
        public Uri SmsFallbackUrl { get; private set; }
        /// <summary>
        /// The HTTP method Twilio will use when making requests to the SmsUrl.
        /// </summary>
        [JsonProperty("sms_method")]
        [JsonConverter(typeof(HttpMethodConverter))]
        public Twilio.Http.HttpMethod SmsMethod { get; private set; }
        /// <summary>
        /// The URL Twilio will request when receiving an incoming SMS message to this number.
        /// </summary>
        [JsonProperty("sms_url")]
        public Uri SmsUrl { get; private set; }
        /// <summary>
        /// The URL that Twilio will request to pass status parameters to your application.
        /// </summary>
        [JsonProperty("status_callback")]
        public Uri StatusCallback { get; private set; }
        /// <summary>
        /// The HTTP method Twilio will use to make requests to the StatusCallback URL.
        /// </summary>
        [JsonProperty("status_callback_method")]
        [JsonConverter(typeof(HttpMethodConverter))]
        public Twilio.Http.HttpMethod StatusCallbackMethod { get; private set; }
        /// <summary>
        /// The 34 character sid of the Trunk Twilio should use to handle phone calls to this number.
        /// </summary>
        [JsonProperty("trunk_sid")]
        public string TrunkSid { get; private set; }
        /// <summary>
        /// The URI for this resource, relative to https://api.
        /// </summary>
        [JsonProperty("uri")]
        public string Uri { get; private set; }
        /// <summary>
        /// The 34 character sid of the application Twilio should use to handle phone calls to this number.
        /// </summary>
        [JsonProperty("voice_application_sid")]
        public string VoiceApplicationSid { get; private set; }
        /// <summary>
        /// Look up the caller's caller-ID name from the CNAM database.
        /// </summary>
        [JsonProperty("voice_caller_id_lookup")]
        public bool? VoiceCallerIdLookup { get; private set; }
        /// <summary>
        /// The HTTP method Twilio will use when requesting the VoiceFallbackUrl.
        /// </summary>
        [JsonProperty("voice_fallback_method")]
        [JsonConverter(typeof(HttpMethodConverter))]
        public Twilio.Http.HttpMethod VoiceFallbackMethod { get; private set; }
        /// <summary>
        /// The URL that Twilio will request if an error occurs retrieving or executing the TwiML requested by Url.
        /// </summary>
        [JsonProperty("voice_fallback_url")]
        public Uri VoiceFallbackUrl { get; private set; }
        /// <summary>
        /// The HTTP method Twilio will use when requesting the above Url.
        /// </summary>
        [JsonProperty("voice_method")]
        [JsonConverter(typeof(HttpMethodConverter))]
        public Twilio.Http.HttpMethod VoiceMethod { get; private set; }
        /// <summary>
        /// The URL Twilio will request when this phone number receives a call.
        /// </summary>
        [JsonProperty("voice_url")]
        public Uri VoiceUrl { get; private set; }

        private MobileResource()
        {

        }
    }

}