/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Api.V2010.Account 
{

    /// <summary>
    /// CreateValidationRequestOptions
    /// </summary>
    public class CreateValidationRequestOptions : IOptions<ValidationRequestResource> 
    {
        /// <summary>
        /// The account_sid
        /// </summary>
        public string PathAccountSid { get; set; }
        /// <summary>
        /// The phone number to verify.
        /// </summary>
        public Types.PhoneNumber PhoneNumber { get; }
        /// <summary>
        /// A human readable description for the new caller ID with maximum length 64 characters.
        /// </summary>
        public string FriendlyName { get; set; }
        /// <summary>
        /// The number of seconds, between 0 and 60, to delay before initiating the verification call.
        /// </summary>
        public int? CallDelay { get; set; }
        /// <summary>
        /// Digits to dial after connecting the verification call.
        /// </summary>
        public string Extension { get; set; }
        /// <summary>
        /// A URL that Twilio will request when the verification call ends to notify your app if the verification process was successful or not.
        /// </summary>
        public Uri StatusCallback { get; set; }
        /// <summary>
        /// The HTTP method Twilio should use when requesting the above URL.
        /// </summary>
        public Twilio.Http.HttpMethod StatusCallbackMethod { get; set; }

        /// <summary>
        /// Construct a new CreateValidationRequestOptions
        /// </summary>
        /// <param name="phoneNumber"> The phone number to verify. </param>
        public CreateValidationRequestOptions(Types.PhoneNumber phoneNumber)
        {
            PhoneNumber = phoneNumber;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (PhoneNumber != null)
            {
                p.Add(new KeyValuePair<string, string>("PhoneNumber", PhoneNumber.ToString()));
            }

            if (FriendlyName != null)
            {
                p.Add(new KeyValuePair<string, string>("FriendlyName", FriendlyName));
            }

            if (CallDelay != null)
            {
                p.Add(new KeyValuePair<string, string>("CallDelay", CallDelay.ToString()));
            }

            if (Extension != null)
            {
                p.Add(new KeyValuePair<string, string>("Extension", Extension));
            }

            if (StatusCallback != null)
            {
                p.Add(new KeyValuePair<string, string>("StatusCallback", Serializers.Url(StatusCallback)));
            }

            if (StatusCallbackMethod != null)
            {
                p.Add(new KeyValuePair<string, string>("StatusCallbackMethod", StatusCallbackMethod.ToString()));
            }

            return p;
        }
    }

}