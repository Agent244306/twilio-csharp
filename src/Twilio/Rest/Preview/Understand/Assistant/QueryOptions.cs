/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Preview.Understand.Assistant 
{

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// FetchQueryOptions
    /// </summary>
    public class FetchQueryOptions : IOptions<QueryResource> 
    {
        /// <summary>
        /// The assistant_sid
        /// </summary>
        public string PathAssistantSid { get; }
        /// <summary>
        /// The sid
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new FetchQueryOptions
        /// </summary>
        /// <param name="pathAssistantSid"> The assistant_sid </param>
        /// <param name="pathSid"> The sid </param>
        public FetchQueryOptions(string pathAssistantSid, string pathSid)
        {
            PathAssistantSid = pathAssistantSid;
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// ReadQueryOptions
    /// </summary>
    public class ReadQueryOptions : ReadOptions<QueryResource> 
    {
        /// <summary>
        /// The assistant_sid
        /// </summary>
        public string PathAssistantSid { get; }
        /// <summary>
        /// The language
        /// </summary>
        public string Language { get; set; }
        /// <summary>
        /// The model_build
        /// </summary>
        public string ModelBuild { get; set; }
        /// <summary>
        /// The status
        /// </summary>
        public string Status { get; set; }

        /// <summary>
        /// Construct a new ReadQueryOptions
        /// </summary>
        /// <param name="pathAssistantSid"> The assistant_sid </param>
        public ReadQueryOptions(string pathAssistantSid)
        {
            PathAssistantSid = pathAssistantSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public override List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (Language != null)
            {
                p.Add(new KeyValuePair<string, string>("Language", Language));
            }

            if (ModelBuild != null)
            {
                p.Add(new KeyValuePair<string, string>("ModelBuild", ModelBuild.ToString()));
            }

            if (Status != null)
            {
                p.Add(new KeyValuePair<string, string>("Status", Status));
            }

            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }

            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// CreateQueryOptions
    /// </summary>
    public class CreateQueryOptions : IOptions<QueryResource> 
    {
        /// <summary>
        /// The assistant_sid
        /// </summary>
        public string PathAssistantSid { get; }
        /// <summary>
        /// The language
        /// </summary>
        public string Language { get; }
        /// <summary>
        /// The query
        /// </summary>
        public string Query { get; }
        /// <summary>
        /// The intents
        /// </summary>
        public string Intents { get; set; }
        /// <summary>
        /// The model_build
        /// </summary>
        public string ModelBuild { get; set; }
        /// <summary>
        /// The field
        /// </summary>
        public string Field { get; set; }

        /// <summary>
        /// Construct a new CreateQueryOptions
        /// </summary>
        /// <param name="pathAssistantSid"> The assistant_sid </param>
        /// <param name="language"> The language </param>
        /// <param name="query"> The query </param>
        public CreateQueryOptions(string pathAssistantSid, string language, string query)
        {
            PathAssistantSid = pathAssistantSid;
            Language = language;
            Query = query;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (Language != null)
            {
                p.Add(new KeyValuePair<string, string>("Language", Language));
            }

            if (Query != null)
            {
                p.Add(new KeyValuePair<string, string>("Query", Query));
            }

            if (Intents != null)
            {
                p.Add(new KeyValuePair<string, string>("Intents", Intents));
            }

            if (ModelBuild != null)
            {
                p.Add(new KeyValuePair<string, string>("ModelBuild", ModelBuild.ToString()));
            }

            if (Field != null)
            {
                p.Add(new KeyValuePair<string, string>("Field", Field));
            }

            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// UpdateQueryOptions
    /// </summary>
    public class UpdateQueryOptions : IOptions<QueryResource> 
    {
        /// <summary>
        /// The assistant_sid
        /// </summary>
        public string PathAssistantSid { get; }
        /// <summary>
        /// The sid
        /// </summary>
        public string PathSid { get; }
        /// <summary>
        /// The sample_sid
        /// </summary>
        public string SampleSid { get; set; }
        /// <summary>
        /// The status
        /// </summary>
        public string Status { get; set; }

        /// <summary>
        /// Construct a new UpdateQueryOptions
        /// </summary>
        /// <param name="pathAssistantSid"> The assistant_sid </param>
        /// <param name="pathSid"> The sid </param>
        public UpdateQueryOptions(string pathAssistantSid, string pathSid)
        {
            PathAssistantSid = pathAssistantSid;
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (SampleSid != null)
            {
                p.Add(new KeyValuePair<string, string>("SampleSid", SampleSid.ToString()));
            }

            if (Status != null)
            {
                p.Add(new KeyValuePair<string, string>("Status", Status));
            }

            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    /// 
    /// DeleteQueryOptions
    /// </summary>
    public class DeleteQueryOptions : IOptions<QueryResource> 
    {
        /// <summary>
        /// The assistant_sid
        /// </summary>
        public string PathAssistantSid { get; }
        /// <summary>
        /// The sid
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new DeleteQueryOptions
        /// </summary>
        /// <param name="pathAssistantSid"> The assistant_sid </param>
        /// <param name="pathSid"> The sid </param>
        public DeleteQueryOptions(string pathAssistantSid, string pathSid)
        {
            PathAssistantSid = pathAssistantSid;
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

}