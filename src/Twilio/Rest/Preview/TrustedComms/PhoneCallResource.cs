/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
/// currently do not have developer preview access, please contact help@twilio.com.
///
/// PhoneCallResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;

namespace Twilio.Rest.Preview.TrustedComms
{

    public class PhoneCallResource : Resource
    {
        private static Request BuildCreateRequest(CreatePhoneCallOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Post,
                Rest.Domain.Preview,
                "/TrustedComms/Business/PhoneCalls",
                client.Region,
                postParams: options.GetParams()
            );
        }

        /// <summary>
        /// Initiates a Branded Call.
        /// </summary>
        /// <param name="options"> Create PhoneCall parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PhoneCall </returns>
        public static PhoneCallResource Create(CreatePhoneCallOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// Initiates a Branded Call.
        /// </summary>
        /// <param name="options"> Create PhoneCall parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PhoneCall </returns>
        public static async System.Threading.Tasks.Task<PhoneCallResource> CreateAsync(CreatePhoneCallOptions options,
                                                                                       ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// Initiates a Branded Call.
        /// </summary>
        /// <param name="from"> Twilio number from which to originate the call </param>
        /// <param name="to"> The terminating Phone Number </param>
        /// <param name="reason"> The business reason for this phone call </param>
        /// <param name="applicationSid"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="callerId"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="fallbackMethod"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="fallbackUrl"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="machineDetection"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="machineDetectionSilenceTimeout"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="machineDetectionSpeechEndThreshold"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="machineDetectionSpeechThreshold"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="machineDetectionTimeout"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="method"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="record"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="recordingChannels"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="recordingStatusCallback"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="recordingStatusCallbackEvent"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="recordingStatusCallbackMethod"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="sendDigits"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="sipAuthPassword"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="sipAuthUsername"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="statusCallback"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="statusCallbackEvent"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="statusCallbackMethod"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="timeout"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="trim"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="url"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PhoneCall </returns>
        public static PhoneCallResource Create(string from,
                                               string to,
                                               string reason = null,
                                               string applicationSid = null,
                                               string callerId = null,
                                               Twilio.Http.HttpMethod fallbackMethod = null,
                                               Uri fallbackUrl = null,
                                               string machineDetection = null,
                                               int? machineDetectionSilenceTimeout = null,
                                               int? machineDetectionSpeechEndThreshold = null,
                                               int? machineDetectionSpeechThreshold = null,
                                               int? machineDetectionTimeout = null,
                                               Twilio.Http.HttpMethod method = null,
                                               bool? record = null,
                                               string recordingChannels = null,
                                               string recordingStatusCallback = null,
                                               List<string> recordingStatusCallbackEvent = null,
                                               Twilio.Http.HttpMethod recordingStatusCallbackMethod = null,
                                               string sendDigits = null,
                                               string sipAuthPassword = null,
                                               string sipAuthUsername = null,
                                               Uri statusCallback = null,
                                               List<string> statusCallbackEvent = null,
                                               Twilio.Http.HttpMethod statusCallbackMethod = null,
                                               int? timeout = null,
                                               string trim = null,
                                               Uri url = null,
                                               ITwilioRestClient client = null)
        {
            var options = new CreatePhoneCallOptions(from, to){Reason = reason, ApplicationSid = applicationSid, CallerId = callerId, FallbackMethod = fallbackMethod, FallbackUrl = fallbackUrl, MachineDetection = machineDetection, MachineDetectionSilenceTimeout = machineDetectionSilenceTimeout, MachineDetectionSpeechEndThreshold = machineDetectionSpeechEndThreshold, MachineDetectionSpeechThreshold = machineDetectionSpeechThreshold, MachineDetectionTimeout = machineDetectionTimeout, Method = method, Record = record, RecordingChannels = recordingChannels, RecordingStatusCallback = recordingStatusCallback, RecordingStatusCallbackEvent = recordingStatusCallbackEvent, RecordingStatusCallbackMethod = recordingStatusCallbackMethod, SendDigits = sendDigits, SipAuthPassword = sipAuthPassword, SipAuthUsername = sipAuthUsername, StatusCallback = statusCallback, StatusCallbackEvent = statusCallbackEvent, StatusCallbackMethod = statusCallbackMethod, Timeout = timeout, Trim = trim, Url = url};
            return Create(options, client);
        }

        #if !NET35
        /// <summary>
        /// Initiates a Branded Call.
        /// </summary>
        /// <param name="from"> Twilio number from which to originate the call </param>
        /// <param name="to"> The terminating Phone Number </param>
        /// <param name="reason"> The business reason for this phone call </param>
        /// <param name="applicationSid"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="callerId"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="fallbackMethod"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="fallbackUrl"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="machineDetection"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="machineDetectionSilenceTimeout"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="machineDetectionSpeechEndThreshold"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="machineDetectionSpeechThreshold"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="machineDetectionTimeout"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="method"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="record"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="recordingChannels"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="recordingStatusCallback"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="recordingStatusCallbackEvent"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="recordingStatusCallbackMethod"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="sendDigits"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="sipAuthPassword"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="sipAuthUsername"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="statusCallback"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="statusCallbackEvent"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="statusCallbackMethod"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="timeout"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="trim"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="url"> Refers to the Voice API Initiate Call parameter </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PhoneCall </returns>
        public static async System.Threading.Tasks.Task<PhoneCallResource> CreateAsync(string from,
                                                                                       string to,
                                                                                       string reason = null,
                                                                                       string applicationSid = null,
                                                                                       string callerId = null,
                                                                                       Twilio.Http.HttpMethod fallbackMethod = null,
                                                                                       Uri fallbackUrl = null,
                                                                                       string machineDetection = null,
                                                                                       int? machineDetectionSilenceTimeout = null,
                                                                                       int? machineDetectionSpeechEndThreshold = null,
                                                                                       int? machineDetectionSpeechThreshold = null,
                                                                                       int? machineDetectionTimeout = null,
                                                                                       Twilio.Http.HttpMethod method = null,
                                                                                       bool? record = null,
                                                                                       string recordingChannels = null,
                                                                                       string recordingStatusCallback = null,
                                                                                       List<string> recordingStatusCallbackEvent = null,
                                                                                       Twilio.Http.HttpMethod recordingStatusCallbackMethod = null,
                                                                                       string sendDigits = null,
                                                                                       string sipAuthPassword = null,
                                                                                       string sipAuthUsername = null,
                                                                                       Uri statusCallback = null,
                                                                                       List<string> statusCallbackEvent = null,
                                                                                       Twilio.Http.HttpMethod statusCallbackMethod = null,
                                                                                       int? timeout = null,
                                                                                       string trim = null,
                                                                                       Uri url = null,
                                                                                       ITwilioRestClient client = null)
        {
            var options = new CreatePhoneCallOptions(from, to){Reason = reason, ApplicationSid = applicationSid, CallerId = callerId, FallbackMethod = fallbackMethod, FallbackUrl = fallbackUrl, MachineDetection = machineDetection, MachineDetectionSilenceTimeout = machineDetectionSilenceTimeout, MachineDetectionSpeechEndThreshold = machineDetectionSpeechEndThreshold, MachineDetectionSpeechThreshold = machineDetectionSpeechThreshold, MachineDetectionTimeout = machineDetectionTimeout, Method = method, Record = record, RecordingChannels = recordingChannels, RecordingStatusCallback = recordingStatusCallback, RecordingStatusCallbackEvent = recordingStatusCallbackEvent, RecordingStatusCallbackMethod = recordingStatusCallbackMethod, SendDigits = sendDigits, SipAuthPassword = sipAuthPassword, SipAuthUsername = sipAuthUsername, StatusCallback = statusCallback, StatusCallbackEvent = statusCallbackEvent, StatusCallbackMethod = statusCallbackMethod, Timeout = timeout, Trim = trim, Url = url};
            return await CreateAsync(options, client);
        }
        #endif

        /// <summary>
        /// Converts a JSON string into a PhoneCallResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> PhoneCallResource object represented by the provided JSON </returns>
        public static PhoneCallResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<PhoneCallResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// A string that uniquely identifies this Current Call.
        /// </summary>
        [JsonProperty("sid")]
        public string Sid { get; private set; }
        /// <summary>
        /// Account Sid.
        /// </summary>
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }
        /// <summary>
        /// The originating Phone Number
        /// </summary>
        [JsonProperty("from")]
        public string From { get; private set; }
        /// <summary>
        /// The terminating Phone Number
        /// </summary>
        [JsonProperty("to")]
        public string To { get; private set; }
        /// <summary>
        /// The business reason for this phone call
        /// </summary>
        [JsonProperty("reason")]
        public string Reason { get; private set; }
        /// <summary>
        /// The date this Current Call was created
        /// </summary>
        [JsonProperty("created_at")]
        public DateTime? CreatedAt { get; private set; }
        /// <summary>
        /// The URL of this resource.
        /// </summary>
        [JsonProperty("url")]
        public Uri Url { get; private set; }

        private PhoneCallResource()
        {

        }
    }

}