/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
/// currently do not have developer preview access, please contact help@twilio.com.
///
/// SuccessRateResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;
using Twilio.Types;

namespace Twilio.Rest.Preview.TrustedComms.Business.Insights
{

    public class SuccessRateResource : Resource
    {
        public sealed class IntervalsEnum : StringEnum
        {
            private IntervalsEnum(string value) : base(value) {}
            public IntervalsEnum() {}
            public static implicit operator IntervalsEnum(string value)
            {
                return new IntervalsEnum(value);
            }

            public static readonly IntervalsEnum Minute = new IntervalsEnum("minute");
            public static readonly IntervalsEnum Hour = new IntervalsEnum("hour");
            public static readonly IntervalsEnum Day = new IntervalsEnum("day");
            public static readonly IntervalsEnum Week = new IntervalsEnum("week");
            public static readonly IntervalsEnum Month = new IntervalsEnum("month");
        }

        private static Request BuildFetchRequest(FetchSuccessRateOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Get,
                Rest.Domain.Preview,
                "/TrustedComms/Businesses/" + options.PathBusinessSid + "/Insights/SuccessRate",
                client.Region,
                queryParams: options.GetParams()
            );
        }

        /// <summary>
        /// Fetch a specific Success Rate.
        /// </summary>
        /// <param name="options"> Fetch SuccessRate parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of SuccessRate </returns>
        public static SuccessRateResource Fetch(FetchSuccessRateOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// Fetch a specific Success Rate.
        /// </summary>
        /// <param name="options"> Fetch SuccessRate parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of SuccessRate </returns>
        public static async System.Threading.Tasks.Task<SuccessRateResource> FetchAsync(FetchSuccessRateOptions options,
                                                                                        ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// Fetch a specific Success Rate.
        /// </summary>
        /// <param name="pathBusinessSid"> Business Sid. </param>
        /// <param name="brandSid"> Brand Sid. </param>
        /// <param name="brandedChannelSid"> Branded Channel Sid. </param>
        /// <param name="phoneNumberSid"> Phone Number Sid. </param>
        /// <param name="country"> Country 2-letter ISO 3166 code. </param>
        /// <param name="start"> The start date that for this Success Rate. </param>
        /// <param name="end"> The end date that for this Success Rate. </param>
        /// <param name="interval"> The Interval of this Success Rate. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of SuccessRate </returns>
        public static SuccessRateResource Fetch(string pathBusinessSid,
                                                string brandSid = null,
                                                string brandedChannelSid = null,
                                                string phoneNumberSid = null,
                                                string country = null,
                                                DateTime? start = null,
                                                DateTime? end = null,
                                                SuccessRateResource.IntervalsEnum interval = null,
                                                ITwilioRestClient client = null)
        {
            var options = new FetchSuccessRateOptions(pathBusinessSid){BrandSid = brandSid, BrandedChannelSid = brandedChannelSid, PhoneNumberSid = phoneNumberSid, Country = country, Start = start, End = end, Interval = interval};
            return Fetch(options, client);
        }

        #if !NET35
        /// <summary>
        /// Fetch a specific Success Rate.
        /// </summary>
        /// <param name="pathBusinessSid"> Business Sid. </param>
        /// <param name="brandSid"> Brand Sid. </param>
        /// <param name="brandedChannelSid"> Branded Channel Sid. </param>
        /// <param name="phoneNumberSid"> Phone Number Sid. </param>
        /// <param name="country"> Country 2-letter ISO 3166 code. </param>
        /// <param name="start"> The start date that for this Success Rate. </param>
        /// <param name="end"> The end date that for this Success Rate. </param>
        /// <param name="interval"> The Interval of this Success Rate. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of SuccessRate </returns>
        public static async System.Threading.Tasks.Task<SuccessRateResource> FetchAsync(string pathBusinessSid,
                                                                                        string brandSid = null,
                                                                                        string brandedChannelSid = null,
                                                                                        string phoneNumberSid = null,
                                                                                        string country = null,
                                                                                        DateTime? start = null,
                                                                                        DateTime? end = null,
                                                                                        SuccessRateResource.IntervalsEnum interval = null,
                                                                                        ITwilioRestClient client = null)
        {
            var options = new FetchSuccessRateOptions(pathBusinessSid){BrandSid = brandSid, BrandedChannelSid = brandedChannelSid, PhoneNumberSid = phoneNumberSid, Country = country, Start = start, End = end, Interval = interval};
            return await FetchAsync(options, client);
        }
        #endif

        /// <summary>
        /// Converts a JSON string into a SuccessRateResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> SuccessRateResource object represented by the provided JSON </returns>
        public static SuccessRateResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<SuccessRateResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// Account Sid.
        /// </summary>
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }
        /// <summary>
        /// Business Sid.
        /// </summary>
        [JsonProperty("business_sid")]
        public string BusinessSid { get; private set; }
        /// <summary>
        /// The end date that for this Success Rate.
        /// </summary>
        [JsonProperty("end")]
        public DateTime? End { get; private set; }
        /// <summary>
        /// The Interval of this Success Rate.
        /// </summary>
        [JsonProperty("interval")]
        [JsonConverter(typeof(StringEnumConverter))]
        public SuccessRateResource.IntervalsEnum Interval { get; private set; }
        /// <summary>
        /// Values of Success Rate per interval.
        /// </summary>
        [JsonProperty("reports")]
        public object Reports { get; private set; }
        /// <summary>
        /// The start date that for this Success Rate.
        /// </summary>
        [JsonProperty("start")]
        public DateTime? Start { get; private set; }
        /// <summary>
        /// The URL of this resource.
        /// </summary>
        [JsonProperty("url")]
        public Uri Url { get; private set; }

        private SuccessRateResource()
        {

        }
    }

}