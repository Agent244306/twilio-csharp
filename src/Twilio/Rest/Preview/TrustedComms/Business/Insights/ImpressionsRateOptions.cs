/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Preview.TrustedComms.Business.Insights
{

    /// <summary>
    /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
    /// currently do not have developer preview access, please contact help@twilio.com.
    ///
    /// Fetch a specific Impressions Rate.
    /// </summary>
    public class FetchImpressionsRateOptions : IOptions<ImpressionsRateResource>
    {
        /// <summary>
        /// Business Sid.
        /// </summary>
        public string PathBusinessSid { get; }
        /// <summary>
        /// Brand Sid.
        /// </summary>
        public string BrandSid { get; set; }
        /// <summary>
        /// Branded Channel Sid.
        /// </summary>
        public string BrandedChannelSid { get; set; }
        /// <summary>
        /// Phone Number Sid.
        /// </summary>
        public string PhoneNumberSid { get; set; }
        /// <summary>
        /// Country 2-letter ISO 3166 code.
        /// </summary>
        public string Country { get; set; }
        /// <summary>
        /// The start date that for this Impressions Rate.
        /// </summary>
        public DateTime? Start { get; set; }
        /// <summary>
        /// The end date that for this Impressions Rate.
        /// </summary>
        public DateTime? End { get; set; }
        /// <summary>
        /// The Interval of this Impressions Rate.
        /// </summary>
        public ImpressionsRateResource.IntervalsEnum Interval { get; set; }

        /// <summary>
        /// Construct a new FetchImpressionsRateOptions
        /// </summary>
        /// <param name="pathBusinessSid"> Business Sid. </param>
        public FetchImpressionsRateOptions(string pathBusinessSid)
        {
            PathBusinessSid = pathBusinessSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (BrandSid != null)
            {
                p.Add(new KeyValuePair<string, string>("BrandSid", BrandSid.ToString()));
            }

            if (BrandedChannelSid != null)
            {
                p.Add(new KeyValuePair<string, string>("BrandedChannelSid", BrandedChannelSid.ToString()));
            }

            if (PhoneNumberSid != null)
            {
                p.Add(new KeyValuePair<string, string>("PhoneNumberSid", PhoneNumberSid.ToString()));
            }

            if (Country != null)
            {
                p.Add(new KeyValuePair<string, string>("Country", Country));
            }

            if (Start != null)
            {
                p.Add(new KeyValuePair<string, string>("Start", Serializers.DateTimeIso8601(Start)));
            }

            if (End != null)
            {
                p.Add(new KeyValuePair<string, string>("End", Serializers.DateTimeIso8601(End)));
            }

            if (Interval != null)
            {
                p.Add(new KeyValuePair<string, string>("Interval", Interval.ToString()));
            }

            return p;
        }
    }

}